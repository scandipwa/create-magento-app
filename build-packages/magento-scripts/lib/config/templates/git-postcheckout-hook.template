OLD_REF="$1"
NEW_REF="$2"
IS_BRANCH_CHECKOUT="$3"

# Only act on branch checkouts (not path checkouts)
if [ "$IS_BRANCH_CHECKOUT" != "1" ]; then
  exit 0
fi

# If git is not available, do nothing
if ! command -v git >/dev/null 2>&1; then
  exit 0
fi

# If old ref is empty (unborn) or same as new, skip
if [ -z "$OLD_REF" ] || [ "$OLD_REF" = "$NEW_REF" ] || echo "$OLD_REF" | grep -q '^0\{40\}$'; then
  exit 0
fi

# Determine if any composer files changed anywhere in the repo between refs
ALL_CHANGED=$(git diff --name-only "$OLD_REF" "$NEW_REF" 2>/dev/null || true)
CHANGED_FILES=$(printf "%s\n" "$ALL_CHANGED" | grep -E '(^|/)(composer\.json|composer\.lock)$' || true)

if [ -z "$CHANGED_FILES" ]; then
  exit 0
fi

# Extract the first directory name from changed composer files
CHANGED_DIR=$(basename "$(git rev-parse --show-toplevel)")

# Get branch names from refs
OLD_BRANCH=$(git name-rev --name-only "$OLD_REF" 2>/dev/null | sed 's/^remotes\///' || echo "$OLD_REF")
NEW_BRANCH=$(git name-rev --name-only "$NEW_REF" 2>/dev/null | sed 's/^remotes\///' || echo "$NEW_REF")

MESSAGE_TITLE="Composer dependencies changed"
MESSAGE_BODY="Changes detected in: $CHANGED_DIR\nBranch: $OLD_BRANCH â†’ $NEW_BRANCH\n\nPlease run composer install (in CLI) or npm run start"

# Cross-platform desktop notification with multiple fallbacks
send_notification() {
  local title="$1"
  local body="$2"
  local mac_alert_file="/tmp/.git_postcheckout_alert_shown"

  # Try Linux notify-send first
  if command -v notify-send >/dev/null 2>&1; then
    notify-send -u normal -t 8000 "$title" "$body"
    return 0
  fi

  # Try macOS terminal-notifier (alert once, then notification)
  if command -v terminal-notifier >/dev/null 2>&1; then
    if [ ! -f "$mac_alert_file" ]; then
      terminal-notifier -title "$title" -message "$body" -sound Basso
      touch "$mac_alert_file"
    else
      terminal-notifier -title "$title" -message "$body" -timeout 8
    fi
    return 0
  fi

  # Try macOS osascript (AppleScript) as fallback (alert once, then notification)
  if command -v osascript >/dev/null 2>&1; then
    if [ ! -f "$mac_alert_file" ]; then
      osascript -e "display alert \"$title\" message \"$body\""
      touch "$mac_alert_file"
    else
      osascript -e "display notification \"$body\" with title \"$title\""
    fi
    return 0
  fi

  # Final fallback to stdout
  echo "$title"
  echo "$body"
}

send_notification "$MESSAGE_TITLE" "$MESSAGE_BODY"

echo ""
echo "$MESSAGE_TITLE"
echo ""
echo "$MESSAGE_BODY"
